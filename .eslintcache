[{"/home/ws/Documents/GANA/react-material-admin/src/index.js":"1","/home/ws/Documents/GANA/react-material-admin/src/serviceWorker.js":"2","/home/ws/Documents/GANA/react-material-admin/src/components/App.js":"3","/home/ws/Documents/GANA/react-material-admin/src/context/LayoutContext.js":"4","/home/ws/Documents/GANA/react-material-admin/src/context/UserContext.js":"5","/home/ws/Documents/GANA/react-material-admin/src/themes/index.js":"6","/home/ws/Documents/GANA/react-material-admin/src/themes/default.js":"7","/home/ws/Documents/GANA/react-material-admin/src/components/Layout/Layout.js":"8","/home/ws/Documents/GANA/react-material-admin/src/pages/error/Error.js":"9","/home/ws/Documents/GANA/react-material-admin/src/pages/login/Login.js":"10","/home/ws/Documents/GANA/react-material-admin/src/pages/error/styles.js":"11","/home/ws/Documents/GANA/react-material-admin/src/pages/login/styles.js":"12","/home/ws/Documents/GANA/react-material-admin/src/components/Layout/styles.js":"13","/home/ws/Documents/GANA/react-material-admin/src/pages/charts/Charts.js":"14","/home/ws/Documents/GANA/react-material-admin/src/pages/tables/Tables.js":"15","/home/ws/Documents/GANA/react-material-admin/src/pages/maps/Maps.js":"16","/home/ws/Documents/GANA/react-material-admin/src/components/Sidebar/Sidebar.js":"17","/home/ws/Documents/GANA/react-material-admin/src/pages/typography/Typography.js":"18","/home/ws/Documents/GANA/react-material-admin/src/pages/notifications/Notifications.js":"19","/home/ws/Documents/GANA/react-material-admin/src/pages/dashboard/Dashboard.js":"20","/home/ws/Documents/GANA/react-material-admin/src/components/Header/Header.js":"21","/home/ws/Documents/GANA/react-material-admin/src/pages/dashboard/mock.js":"22","/home/ws/Documents/GANA/react-material-admin/src/pages/charts/components/ApexLineChart.js":"23","/home/ws/Documents/GANA/react-material-admin/src/pages/charts/components/ApexHeatmap.js":"24","/home/ws/Documents/GANA/react-material-admin/src/pages/maps/styles.js":"25","/home/ws/Documents/GANA/react-material-admin/src/components/Sidebar/styles.js":"26","/home/ws/Documents/GANA/react-material-admin/src/pages/typography/styles.js":"27","/home/ws/Documents/GANA/react-material-admin/src/pages/notifications/styles.js":"28","/home/ws/Documents/GANA/react-material-admin/src/pages/dashboard/styles.js":"29","/home/ws/Documents/GANA/react-material-admin/src/pages/dashboard/components/Table/Table.js":"30","/home/ws/Documents/GANA/react-material-admin/src/components/Header/styles.js":"31","/home/ws/Documents/GANA/react-material-admin/src/components/Sidebar/components/Dot.js":"32","/home/ws/Documents/GANA/react-material-admin/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"33","/home/ws/Documents/GANA/react-material-admin/src/pages/dashboard/components/BigStat/BigStat.js":"34","/home/ws/Documents/GANA/react-material-admin/src/components/Widget/Widget.js":"35","/home/ws/Documents/GANA/react-material-admin/src/components/PageTitle/PageTitle.js":"36","/home/ws/Documents/GANA/react-material-admin/src/components/Wrappers/Wrappers.js":"37","/home/ws/Documents/GANA/react-material-admin/src/components/Notification/Notification.js":"38","/home/ws/Documents/GANA/react-material-admin/src/components/UserAvatar/UserAvatar.js":"39","/home/ws/Documents/GANA/react-material-admin/src/pages/icons/Icons.js":"40","/home/ws/Documents/GANA/react-material-admin/src/components/Sidebar/components/SidebarLink/styles.js":"41","/home/ws/Documents/GANA/react-material-admin/src/pages/dashboard/components/BigStat/styles.js":"42","/home/ws/Documents/GANA/react-material-admin/src/components/Widget/styles.js":"43","/home/ws/Documents/GANA/react-material-admin/src/components/PageTitle/styles.js":"44","/home/ws/Documents/GANA/react-material-admin/src/components/Notification/styles.js":"45","/home/ws/Documents/GANA/react-material-admin/src/components/UserAvatar/styles.js":"46","/home/ws/Documents/GANA/react-material-admin/src/pages/icons/styles.js":"47","/home/ws/Documents/GANA/react-material-admin/src/pages/reddit/Reddit.js":"48","/home/ws/Documents/GANA/react-material-admin/src/pages/reddit/components/BoardHeader.js":"49","/home/ws/Documents/GANA/react-material-admin/src/pages/reddit/styles.js":"50","/home/ws/Documents/GANA/react-material-admin/src/pages/reddit/components/Topic.js":"51","/home/ws/Documents/GANA/react-material-admin/src/pages/reddit/components/PostCard.js":"52","/home/ws/Documents/GANA/react-material-admin/src/services/RedditService.js":"53","/home/ws/Documents/GANA/react-material-admin/src/helper/utilities.js":"54","/home/ws/Documents/GANA/react-material-admin/src/pages/reddit/PostDetails.js":"55"},{"size":936,"mtime":1636222829290,"results":"56","hashOfConfig":"57"},{"size":4948,"mtime":1636205757829,"results":"58","hashOfConfig":"57"},{"size":1719,"mtime":1636257930581,"results":"59","hashOfConfig":"57"},{"size":1392,"mtime":1636205757825,"results":"60","hashOfConfig":"57"},{"size":1978,"mtime":1636257918653,"results":"61","hashOfConfig":"57"},{"size":502,"mtime":1636205757829,"results":"62","hashOfConfig":"57"},{"size":2987,"mtime":1636205757829,"results":"63","hashOfConfig":"57"},{"size":1216,"mtime":1636259296935,"results":"64","hashOfConfig":"57"},{"size":1571,"mtime":1636205757825,"results":"65","hashOfConfig":"57"},{"size":8886,"mtime":1636205757829,"results":"66","hashOfConfig":"57"},{"size":1334,"mtime":1636205757825,"results":"67","hashOfConfig":"57"},{"size":3133,"mtime":1636205757829,"results":"68","hashOfConfig":"57"},{"size":680,"mtime":1636205757825,"results":"69","hashOfConfig":"57"},{"size":5556,"mtime":1636205757825,"results":"70","hashOfConfig":"71"},{"size":2082,"mtime":1636205757829,"results":"72","hashOfConfig":"71"},{"size":971,"mtime":1636205757829,"results":"73","hashOfConfig":"71"},{"size":4244,"mtime":1636205757825,"results":"74","hashOfConfig":"71"},{"size":4506,"mtime":1636205757829,"results":"75","hashOfConfig":"71"},{"size":13470,"mtime":1636205757829,"results":"76","hashOfConfig":"71"},{"size":15659,"mtime":1636205757825,"results":"77","hashOfConfig":"71"},{"size":620,"mtime":1636257958704,"results":"78","hashOfConfig":"57"},{"size":4105,"mtime":1636205757825,"results":"79","hashOfConfig":"71"},{"size":1328,"mtime":1636205757825,"results":"80","hashOfConfig":"71"},{"size":1794,"mtime":1636205757825,"results":"81","hashOfConfig":"71"},{"size":171,"mtime":1636205757829,"results":"82","hashOfConfig":"71"},{"size":1304,"mtime":1636205757825,"results":"83","hashOfConfig":"71"},{"size":374,"mtime":1636205757829,"results":"84","hashOfConfig":"71"},{"size":1858,"mtime":1636205757829,"results":"85","hashOfConfig":"71"},{"size":2870,"mtime":1636205757825,"results":"86","hashOfConfig":"71"},{"size":1274,"mtime":1636205757825,"results":"87","hashOfConfig":"71"},{"size":3922,"mtime":1636257578341,"results":"88","hashOfConfig":"57"},{"size":862,"mtime":1636205757825,"results":"89","hashOfConfig":"71"},{"size":4411,"mtime":1636205757825,"results":"90","hashOfConfig":"71"},{"size":4039,"mtime":1636205757825,"results":"91","hashOfConfig":"71"},{"size":2485,"mtime":1636205757825,"results":"92","hashOfConfig":"57"},{"size":427,"mtime":1636205757825,"results":"93","hashOfConfig":"71"},{"size":3790,"mtime":1636205757825,"results":"94","hashOfConfig":"71"},{"size":3296,"mtime":1636205757825,"results":"95","hashOfConfig":"71"},{"size":593,"mtime":1636205757825,"results":"96","hashOfConfig":"71"},{"size":377833,"mtime":1636205757829,"results":"97","hashOfConfig":"71"},{"size":1412,"mtime":1636205757825,"results":"98","hashOfConfig":"71"},{"size":1027,"mtime":1636205757825,"results":"99","hashOfConfig":"71"},{"size":969,"mtime":1636205757825,"results":"100","hashOfConfig":"57"},{"size":462,"mtime":1636205757825,"results":"101","hashOfConfig":"71"},{"size":993,"mtime":1636205757825,"results":"102","hashOfConfig":"71"},{"size":276,"mtime":1636205757825,"results":"103","hashOfConfig":"71"},{"size":780,"mtime":1636205757829,"results":"104","hashOfConfig":"71"},{"size":454,"mtime":1636253943849,"results":"105","hashOfConfig":"57"},{"size":1152,"mtime":1636220882663,"results":"106","hashOfConfig":"57"},{"size":1183,"mtime":1636259359574,"results":"107","hashOfConfig":"57"},{"size":4013,"mtime":1636257131126,"results":"108","hashOfConfig":"57"},{"size":2244,"mtime":1636250286143,"results":"109","hashOfConfig":"57"},{"size":309,"mtime":1636252589702,"results":"110","hashOfConfig":"57"},{"size":953,"mtime":1636250562427,"results":"111","hashOfConfig":"57"},{"size":6513,"mtime":1636259172119,"results":"112","hashOfConfig":"57"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},"y1i63l",{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16m75g5",{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"115"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"115"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"115"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"115"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},"/home/ws/Documents/GANA/react-material-admin/src/index.js",[],["230","231"],"/home/ws/Documents/GANA/react-material-admin/src/serviceWorker.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/App.js",[],"/home/ws/Documents/GANA/react-material-admin/src/context/LayoutContext.js",[],"/home/ws/Documents/GANA/react-material-admin/src/context/UserContext.js",[],"/home/ws/Documents/GANA/react-material-admin/src/themes/index.js",[],"/home/ws/Documents/GANA/react-material-admin/src/themes/default.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/Layout/Layout.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/error/Error.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/login/Login.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/error/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/login/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/Layout/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/charts/Charts.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/tables/Tables.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/maps/Maps.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/Sidebar/Sidebar.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/typography/Typography.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/notifications/Notifications.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/dashboard/Dashboard.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/Header/Header.js",["232","233"],"import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n} from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles\";\nimport { useHistory } from \"react-router\";\n\nexport default function Header(props) {\n  const history = useHistory();\n  const goToReddit = () => {\n    history.push(\"/app/reddit/hot\");\n  }\n  var classes = useStyles();\n  const url = \"https://1000logos.net/wp-content/uploads/2017/05/Reddit-logo.jpg\";\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <div onClick={() => goToReddit()}>\n        <img src={url} className=\"reddit-icon\" />\n      </div>\n    </AppBar>\n  );\n}\n","/home/ws/Documents/GANA/react-material-admin/src/pages/dashboard/mock.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/charts/components/ApexLineChart.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/charts/components/ApexHeatmap.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/maps/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/Sidebar/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/typography/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/notifications/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/dashboard/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/dashboard/components/Table/Table.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/Header/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/Sidebar/components/Dot.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/dashboard/components/BigStat/BigStat.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/Widget/Widget.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/PageTitle/PageTitle.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/Wrappers/Wrappers.js",[],["234","235"],"/home/ws/Documents/GANA/react-material-admin/src/components/Notification/Notification.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/UserAvatar/UserAvatar.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/icons/Icons.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/Sidebar/components/SidebarLink/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/dashboard/components/BigStat/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/Widget/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/PageTitle/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/Notification/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/components/UserAvatar/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/icons/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/reddit/Reddit.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/reddit/components/BoardHeader.js",["236"],"function BoardHeader(props) {\n  const { classes } = props\n  const url = \"https://styles.redditmedia.com/t5_2s580/styles/bannerBackgroundImage_5l1s0k4rvbr71.png?width=4000&s=d1776868bd2be4fd46ee281efaa103cac7b6c2af\"\n  const avatar = \"https://styles.redditmedia.com/t5_2s580/styles/communityIcon_7fu1ixwtsn661.png?width=256&s=7cf7106da701c2fe71cf4917f429ccf16d84066a\";\n  return (\n    <>\n      <div className={classes.groupHeader}>\n        <div className={classes.boardHeader} style={{ background: `url(${url}) center center / cover no-repeat rgb(37, 25, 22)` }}>\n        </div>\n        <div className={classes.pageHeader}>\n          <div className={classes.pageImage}>\n            <img src={avatar} className={classes.avatar} />\n            <div className={classes.pageTitle}>\n              <div className={classes.title}>\n                <h1 className={classes.titleH1}>\n                  Dota 2 on Reddit\n                </h1>\n                <h2 className={classes.titleH2}>\n                  r/Dota2\n                </h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default BoardHeader;","/home/ws/Documents/GANA/react-material-admin/src/pages/reddit/styles.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/reddit/components/Topic.js",["237","238"],"import { Card, Grid } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport * as Icon from 'react-bootstrap-icons';\nimport PostCard from \"./PostCard\";\nimport { useHistory, useLocation } from \"react-router\";\nimport RedditService from \"../../../services/RedditService\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n\nfunction Topic(props) {\n  const history = useHistory();\n  const location = useLocation();\n  const [active, setActive] = useState();\n  const [listPost, setListPost] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  console.log(props)\n  const goToPostDetail = (id) => {\n    history.push(`/app/post?postId=${id}`)\n  }\n  const getListPost = async (topic) => {\n    console.log(\"getListPost\")\n    try {\n      const res = await RedditService.getListPost(topic, page, limit);\n      if (res.status === 200) {\n        setListPost(res.data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const loadMorePost = async () => {\n    console.log(\"getListPost\")\n    try {\n      const limitSize = limit + 5;\n      setLimit(limitSize);\n      const res = await RedditService.getListPost(active, page, limitSize);\n      if (res.status === 200) {\n        setListPost(res.data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  const handleChangeTopic = (topic) => {\n    history.push(`/app/reddit/${topic}`)\n    setActive(topic);\n  }\n\n  useEffect(() => {\n    if (location.pathname.includes(\"hot\")) {\n      setActive(\"hot\");\n      getListPost(\"hot\");\n    }\n    if (location.pathname.includes(\"new\")) {\n      setActive(\"new\");\n      getListPost(\"new\");\n    }\n    if (location.pathname.includes(\"top\")) {\n      setActive(\"top\");\n      getListPost(\"top\");\n    }\n  }, [location.pathname])\n  return (\n    <div className=\"container\">\n      <Grid container spacing={3}>\n        <Grid item md={8}>\n          <Card className=\"px-3 p-2\">\n            <div className=\"d-flex justify-content-start\">\n              <div className={active === \"hot\" ? \"topic-choose-active\" : \"topic-choose\"} onClick={() => handleChangeTopic(\"hot\")}>\n                <Icon.Droplet size=\"20\" />\n                <span className='mx-1'>Hot</span>\n              </div>\n              <div className={active === \"new\" ? \"topic-choose-active\" : \"topic-choose\"} onClick={() => handleChangeTopic(\"new\")}>\n                <Icon.Newspaper size=\"20\" />\n                <span className='mx-1'>New</span>\n              </div>\n              <div className={active === \"top\" ? \"topic-choose-active\" : \"topic-choose\"} onClick={() => handleChangeTopic(\"top\")}>\n                <Icon.BarChart size=\"20\" />\n                <span className='mx-1'>Top</span>\n              </div>\n            </div>\n          </Card>\n          <InfiniteScroll\n            dataLength={listPost.length}\n            next={loadMorePost}\n            hasMore={true}\n          >\n            {\n              listPost.map((item, index) => (\n                <PostCard key={index} data={item} openModalPost={() => goToPostDetail(item.id)} />\n              ))\n            }\n          </InfiniteScroll>\n        </Grid>\n        <Grid item md={4}>\n          <Card className=\"\">\n            <div className=\"header-card\">\n              <span>About Community</span>\n            </div>\n            <div className=\"body-card\">\n              <div>Dota</div>\n              <div className=\"d-flex\">\n                <div className=\"community-content\">\n                  <div>956k</div>\n                  <div>Members</div>\n                </div>\n                <div className=\"community-content\">\n                  <div>5.0k</div>\n                  <div>Online</div>\n                </div>\n              </div>\n              <div className=\"community-foot\">\n                <Icon.Calendar size=\"20\" />\n                <span className=\"m-2\">Created Oct 13, 2010</span>\n              </div>\n            </div>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Topic;","/home/ws/Documents/GANA/react-material-admin/src/pages/reddit/components/PostCard.js",["239"],"import { Card, } from \"@material-ui/core\";\nimport * as Icon from 'react-bootstrap-icons';\nimport { convertTag, formatNumber, timeSince } from \"../../../helper/utilities\";\n\nfunction PostCard(props) {\n  const { openModalPost, data } = props\n  const postAva = data.avatar_poster;\n  const time = new Date(data.created_at);\n\n  return (\n    <Card className=\"px-1 p-2 mt-3 post-card\" onClick={openModalPost}>\n      <div className=\"d-flex\">\n        <div className=\"up-down-vote\">\n          <Icon.ArrowUpSquare size=\"20\" className=\"up-vote\" />\n          <div className=\"my-2\">{formatNumber(data.upVote_count)}</div>\n          <Icon.ArrowDownSquare size=\"20\" className=\"down-vote\" />\n        </div>\n        <div className=\"flex-grow-1\">\n          <div className=\"post-header\">\n            <span className=\"mx-1\">Posted by</span>\n            <img src={postAva} className=\"post-ava mx-1\" />\n            <span className=\"post-user-link mx-1\">{data.posted_by}</span>\n            <span className=\"post-time mx-1\">{`${timeSince(time)} ago`}</span>\n          </div>\n          <div className=\"post-body mx-1 mt-3\">\n            <div className=\"post-title\">\n              <span>{data.title}</span>\n            </div>\n            <div className=\"post-tag\">\n              <span>{convertTag(data.tag)}</span>\n            </div>\n            <div className=\"post-content mt-2\">\n              <div className=\"post-text\">\n                {data.content}\n              </div>\n            </div>\n            <div className=\"post-foot\">\n              <div className=\"d-flex justify-content-start\">\n                <div className=\"post-comment comment\">\n                  <Icon.ChatLeft size=\"20\" />\n                  <span className=\"mx-2\">{formatNumber(data.comment_count)} Comments</span>\n                </div>\n                <div className=\"post-comment\">\n                  <Icon.Share size=\"20\" />\n                  <span className=\"mx-2\">Share</span>\n                </div>\n                <div className=\"post-comment\">\n                  <Icon.Save size=\"20\" />\n                  <span className=\"mx-2\">Save</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nexport default PostCard;","/home/ws/Documents/GANA/react-material-admin/src/services/RedditService.js",[],"/home/ws/Documents/GANA/react-material-admin/src/helper/utilities.js",[],"/home/ws/Documents/GANA/react-material-admin/src/pages/reddit/PostDetails.js",["240","241"],"import { Card, Grid } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport * as Icon from 'react-bootstrap-icons';\nimport { useHistory, useLocation } from \"react-router\";\nimport { convertTag, formatNumber, timeSince } from \"../../helper/utilities\";\nimport RedditService from \"../../services/RedditService\";\n\n\nfunction PostDetail(props) {\n  const history = useHistory();\n  const location = useLocation();\n  const [detailState, setDetailsState] = useState({\n    id: \"\",\n    posted_by: \"\",\n    avatar_poster: \"\",\n    created_at: \"\",\n    title: \"\",\n    content: \"\",\n    tag: [],\n    upVote_count: \"\",\n    comment_count: \"\",\n    topic: \"\"\n  })\n  const avaGroup = \"https://styles.redditmedia.com/t5_2s580/styles/communityIcon_7fu1ixwtsn661.png?width=256&s=7cf7106da701c2fe71cf4917f429ccf16d84066a\";\n  const handleBack = () => {\n    history.goBack();\n  };\n  const getPostDetails = async (postId) => {\n    try {\n      const res = await RedditService.getPostDetails(postId);\n      const { status, data } = res;\n      if (status === 200) {\n        setDetailsState((state) => ({\n          ...state,\n          id: data.id,\n          posted_by: data.posted_by,\n          avatar_poster: data.avatar_poster,\n          created_at: data.created_at,\n          title: data.title,\n          content: data.content,\n          tag: data.tag,\n          upVote_count: data.upVote_count,\n          comment_count: data.comment_count,\n          topic: data.topic\n        }))\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  useState(() => {\n    const query = new URLSearchParams(location.search);\n    const postId = query.get(\"postId\");\n    getPostDetails(postId);\n  }, [])\n  return (\n    <>\n      <Modal\n        show={true}\n        onHide={handleBack}\n        dialogClassName=\"modal-90w\"\n        size=\"xl\"\n        aria-labelledby=\"example-custom-modal-styling-title\"\n      >\n        <Modal.Header>\n          <div className=\"detail-modal-title\">\n            <div className=\"d-flex justify-content-start detail-vote\">\n              <Icon.ArrowUpSquare size=\"20\" className=\"up-vote\" />\n              <div className=\"mx-2\">{formatNumber(detailState.upVote_count)}</div>\n              <Icon.ArrowDownSquare size=\"20\" className=\"down-vote\" />\n            </div>\n            <div className=\"post-header-detail mx-2\">\n              <div className=\"post-title-detail-header\">\n                <span>{detailState.title}</span>\n              </div>\n              <div className=\"post-tag-detail\">\n                <span>{convertTag(detailState.tag)}</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"detail-close\" onClick={handleBack}>\n            <Icon.X size=\"22\" />\n            <span>Close</span>\n          </div>\n        </Modal.Header>\n        <Modal.Body>\n          <Grid container spacing={3}>\n            <Grid item md={8}>\n              <Card className=\"px-1 p-2 post-card-detail\">\n                <div className=\"d-flex\">\n                  <div className=\"up-down-vote\">\n                    <Icon.ArrowUpSquare size=\"20\" className=\"up-vote\" />\n                    <div className=\"my-2\">{formatNumber(detailState.upVote_count)}</div>\n                    <Icon.ArrowDownSquare size=\"20\" className=\"down-vote\" />\n                  </div>\n                  <div className=\"flex-grow-1\">\n                    <div className=\"post-header\">\n                      <img src={avaGroup} className=\"post-ava-group mx-1\" />\n                      <span className=\"mx-1 group-name\">r/DotA2</span>\n                      <span className=\"mx-1\">Posted by</span>\n                      {\"-\"}\n                      <img src={detailState.avatar_poster} className=\"post-ava mx-1\" />\n                      <span className=\"post-user-link mx-1\">{detailState.posted_by}</span>\n                      <span className=\"post-time mx-1\">{`${timeSince(new Date(detailState.created_at))} ago`}</span>\n                    </div>\n                    <div className=\"post-body mx-1 mt-3\">\n                      <div className=\"post-title-detail\">\n                        <span>{detailState.title}</span>\n                      </div>\n                      <div className=\"post-tag d-block mt-1\">\n                        <span>{convertTag(detailState.tag)}</span>\n                      </div>\n                      <div className=\"post-content mt-2\">\n                        <div className=\"post-text\">\n                          {detailState.content}\n                        </div>\n                      </div>\n                      <div className=\"post-foot mt-3\">\n                        <div className=\"d-flex justify-content-start\">\n                          <div className=\"post-comment comment\">\n                            <Icon.ChatLeft size=\"20\" />\n                            <span className=\"mx-2\">{detailState.comment_count}</span>\n                          </div>\n                          <div className=\"post-comment\">\n                            <Icon.Share size=\"20\" />\n                            <span className=\"mx-2\">Share</span>\n                          </div>\n                          <div className=\"post-comment\">\n                            <Icon.Save size=\"20\" />\n                            <span className=\"mx-2\">Save</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            </Grid>\n            <Grid item md={4}>\n              <Card className=\"\">\n                <div className=\"header-card\">\n                  <span>About Community</span>\n                </div>\n                <div className=\"body-card\">\n                  <div>Dota</div>\n                  <div className=\"d-flex\">\n                    <div className=\"community-content\">\n                      <div>956k</div>\n                      <div>Members</div>\n                    </div>\n                    <div className=\"community-content\">\n                      <div>5.0k</div>\n                      <div>Online</div>\n                    </div>\n                  </div>\n                  <div className=\"community-foot\">\n                    <Icon.Calendar size=\"20\" />\n                    <span className=\"m-2\">Created Oct 13, 2010</span>\n                  </div>\n                </div>\n              </Card>\n            </Grid>\n          </Grid>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default PostDetail;",{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":4,"column":3,"nodeType":"248","messageId":"249","endLine":4,"endColumn":10},{"ruleId":"250","severity":1,"message":"251","line":21,"column":9,"nodeType":"252","endLine":21,"endColumn":50},{"ruleId":"242","replacedBy":"253"},{"ruleId":"244","replacedBy":"254"},{"ruleId":"250","severity":1,"message":"251","line":12,"column":13,"nodeType":"252","endLine":12,"endColumn":60},{"ruleId":"246","severity":1,"message":"255","line":15,"column":16,"nodeType":"248","messageId":"249","endLine":15,"endColumn":23},{"ruleId":"256","severity":1,"message":"257","line":64,"column":6,"nodeType":"258","endLine":64,"endColumn":25,"suggestions":"259"},{"ruleId":"250","severity":1,"message":"251","line":21,"column":13,"nodeType":"252","endLine":21,"endColumn":60},{"ruleId":"250","severity":1,"message":"251","line":99,"column":23,"nodeType":"252","endLine":99,"endColumn":77},{"ruleId":"250","severity":1,"message":"251","line":103,"column":23,"nodeType":"252","endLine":103,"endColumn":88},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"no-unused-vars","'Toolbar' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["260"],["261"],"'setPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getListPost'. Either include it or remove the dependency array.","ArrayExpression",["262"],"no-global-assign","no-unsafe-negation",{"desc":"263","fix":"264"},"Update the dependencies array to be: [getListPost, location.pathname]",{"range":"265","text":"266"},[1776,1795],"[getListPost, location.pathname]"]